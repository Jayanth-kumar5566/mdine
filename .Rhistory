#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
col=NULL, seed=NULL, reorder=NULL, vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(8, 0.5), widths=c(6,6,1.5))
par(mai=rep(0.1, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.1, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=2, lwd = 6, box.col="white")
}
plot_networks(md_test1)
dev.off()
plot_networks(md_test1)
dev.off()
plot_networks(md_test1)
#'
#' @param obj An object of class \code{mdine}
#' @param v.col
#' @param e.col
#'
#' @export
#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
col=NULL, seed=NULL, reorder=NULL, vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(8, 0.5), widths=c(6,6,1.5))
par(mai=rep(0.2, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.2, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=2, lwd = 6, box.col="white")
}
#'
#' @param obj An object of class \code{mdine}
#' @param v.col
#' @param e.col
#'
#' @export
#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
col=NULL, seed=NULL, reorder=NULL, vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(8, 0.5), widths=c(6,6,1.5))
par(mai=rep(0.2, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.2, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=2, lwd = 6, box.col="white")
}
plot_networks(md_test1)
dev.off()
plot_networks(md_test1)
#'
#' @param obj An object of class \code{mdine}
#' @param v.col
#' @param e.col
#'
#' @export
#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
col=NULL, seed=NULL, reorder=NULL, vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(6, 1), widths=c(6,6,1.5))
par(mai=rep(0.2, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.2, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=2, lwd = 6, box.col="white")
}
dev.off()
plot_networks(md_test1)
#'
#' @param obj An object of class \code{mdine}
#' @param v.col
#' @param e.col
#'
#' @export
#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
col=NULL, seed=NULL, reorder=NULL, vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(6, 0.5), widths=c(6,6,1.5))
par(mai=rep(0.2, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.2, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=2, lwd = 6, box.col="white")
}
plot_networks(md_test1)
#'
#' @param obj An object of class \code{mdine}
#' @param v.col
#' @param e.col
#'
#' @export
#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(6, 1), widths=c(6,6,1.5))
par(mai=rep(0.2, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.2, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=2, lwd = 6, box.col="white")
}
#'
#' @param obj An object of class \code{mdine}
#' @param v.col
#' @param e.col
#'
#' @export
#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(5, 2), widths=c(6,6,1.5))
par(mai=rep(0.2, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.2, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=2, lwd = 6, box.col="white")
}
plot_networks(md_test1)
dev.off()
plot_networks(md_test1)
#'
#' @param obj An object of class \code{mdine}
#' @param v.col
#' @param e.col
#'
#' @export
#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(5, 2), widths=c(6,6,1.5))
par(mai=rep(0.2, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.2, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=1, lwd = 6, box.col="white")
}
plot_networks(md_test1)
#'
#' @param obj An object of class \code{mdine}
#' @param v.col
#' @param e.col
#'
#' @export
#'
#' @import igraph
#'
#' @examples ls()
plot_networks <- function(obj, v.col=NULL, e.col=NULL, lay0=layout_in_circle, lay1=layout_in_circle,
lab0="Group 0", lab1="Group 1", scale_line_width=30, vertex.size0=50, vertex.size1=50,
vertex.labs=NULL, vertex.label.cex=NULL) {
if (class(obj) != "mdine") stop("obj must be of class \"mdine\"")
w.adj <- ci2adj(obj, weighted = TRUE)
g0 <- adj2ig(w.adj$adj0, v.col, e.col)
g1 <- adj2ig(w.adj$adj1, v.col, e.col)
if (is.function(lay0)) {
l0 = lay0(g0)
} else {
l0 = lay0
}
if (is.function(lay1)) {
l1 = lay1(g1)
} else {
l1 = lay1
}
if (is.null(E(g0)$weight)) {
lwd0 <- 0
} else {
lwd0 <- abs(E(g0)$weight)*scale_line_width
}
if (is.null(E(g1)$weight)) {
lwd1 <- 0
} else {
lwd1 <- abs(E(g1)$weight)*scale_line_width
}
layout(matrix(c(1,2,3,3), ncol=2, byrow=TRUE), heights=c(5, 2), widths=c(6,6,1.5))
par(mai=rep(0.2, 4))
plot.igraph(g0, layout=l1,
edge.width=lwd0, main=lab0,
vertex.size=vertex.size0, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
par(mai=rep(0.2, 4))
plot.igraph(g1, layout=l1,
edge.width=lwd1, main=lab1,
vertex.size=vertex.size1, vertex.shape="circle",
vertex.label=vertex.labs, vertex.label.color="black", vertex.label.cex=vertex.label.cex)
plot.new()
legend("center", legend=c("Positive assoc.", "Negative assoc."),
lty=c(1,1), col=c("forestgreen","orangered"), ncol=2, cex=1.3, lwd = 6, box.col="white")
}
plot_networks(md_test1)
document()
document()
document()
document()
devtools::check()
?devtools::check
devtools::check(remote = TRUE)
devtools::check(remote = TRUE)
document()
devtools::check(remote = TRUE)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
?vignette
?mdine
library(mdine)
?mdine
parallel::detectCores()
vignette("mdine")
vignette("mdine-vignette")
devtools::build_vignettes()
vignette("mdine")
vignette(package="mdine")
data("crohns")
head(crohns)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
X <- model.matrix(~disease, data=crohns$covars)
X
# Running mdine
md.fit <- mdine(Y=crohns$otu.counts, X=X, Z=X[,2], mc.cores=4, iter=1000)
